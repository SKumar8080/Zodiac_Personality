type Language = 'en' | 'hi';
let language: Language = 'en';

const enDescriptions: Record<string, string> = {
  mesh: "ЁЯФе Bold and fearless. Mesh log kisi ki nahi sunte, except their inner fire.",
  vrishabh: "ЁЯНГ Loyal, grounded, aur thoda stubborn. But when you commit, itтАЩs all or nothing.",
  mithun: "ЁЯМкя╕П Chatty, witty, multitasking king. Aaj yahan, kal wahan.",
  karka: "ЁЯМК Emotional ocean. Dil se care karte ho!",
  singh: "ЁЯСС Born to rule. Drama hi zindagi hai.",
  kanya: "ЁЯУЪ Logical, neat, and planner. Excel sheet of emotions.",
  tula: "тЪЦя╕П Stylish and balanced. Chaos bhi classy lagta hai.",
  vrishchik: "ЁЯжВ Intense, magnetic. Full power, no brake.",
  dhanu: "ЁЯП╣ Wanderer with gyaan. Meme guru.",
  makar: "ЁЯз▒ Ambitious & grounded. Calm outside, volcano inside.",
  kumbh: "ЁЯФо Quirky rebel. Invents jugaad in dreams.",
  meen: "ЁЯРЯ Dreamy, intuitive, filmy soul."
};

const hiDescriptions: Record<string, string> = {
  mesh: "ЁЯФе рдирд┐рд░реНрднрдп рдФрд░ рдЬреЛрд╢реАрд▓реЗред рдЕрдкрдиреЗ рдорди рдХреА рд╕реБрдирддреЗ рд╣реИрдВ, рдФрд░ рдХрд┐рд╕реА рдХреА рдирд╣реАрдВред",
  vrishabh: "ЁЯНГ рднрд░реЛрд╕реЗрдордВрдж рдФрд░ рдЬрд┐рджреНрджреАред рдЬреЛ рдард╛рди рд▓рд┐рдпрд╛, рд╡реЛ рдкреВрд░рд╛ рдХрд░рддреЗ рд╣реИрдВред",
  mithun: "ЁЯМкя╕П рдмрд╛рддреВрдиреА рдФрд░ рд╣реЛрд╢рд┐рдпрд╛рд░ред рд╣рд░ рдЬрдЧрд╣ рдореМрдЬреВрдж рд░рд╣рддреЗ рд╣реИрдВ рдПрдХ рд╕рд╛рдеред",
  karka: "ЁЯМК рднрд╛рд╡рдирд╛ рдкреНрд░рдзрд╛рдиред рд╕рдмрд╕реЗ рдЬреНрдпрд╛рджрд╛ рдХреЗрдпрд░рд┐рдВрдЧ рдФрд░ рдЗрдореЛрд╢рдирд▓ред",
  singh: "ЁЯСС рд░рд╛рдЬрд╛ рдЬреИрд╕реЗ рд╕реНрд╡рднрд╛рд╡ рд╡рд╛рд▓реЗред рдзреНрдпрд╛рди рдХрд╛ рдХреЗрдВрджреНрд░ рд░рд╣рдирд╛ рдкрд╕рдВрдж рдХрд░рддреЗ рд╣реИрдВред",
  kanya: "ЁЯУЪ рдкрд░рдлреЗрдХреНрд╢рдирд┐рд╕реНрдЯред рдкреНрд▓рд╛рдирд┐рдВрдЧ рдФрд░ рд╕рдлрд╛рдИ рдореЗрдВ рдорд╛рд╕реНрдЯрд░ред",
  tula: "тЪЦя╕П рд╕рдВрддреБрд▓рд┐рдд, рдлреИрд╢рдиреЗрдмрд▓, рдФрд░ рд╣рдореЗрд╢рд╛ рдЪрд╛рд░реНрдорд┐рдВрдЧред",
  vrishchik: "ЁЯжВ рддреАрд╡реНрд░ рдФрд░ рд░рд╣рд╕реНрдпрдордпред рдпрд╛ рддреЛ рд╕рдм рдХреБрдЫ, рдпрд╛ рдХреБрдЫ рдирд╣реАрдВред",
  dhanu: "ЁЯП╣ рдпрд╛рддреНрд░рд╛рдПрдВ рдкрд╕рдВрдж рд╣реИрдВ, рд▓реЗрдХрд┐рди рдЬреНрдЮрд╛рди рд╕реЗ рднреА рднрд░рдкреВрд░ред",
  makar: "ЁЯз▒ рдЧрдВрднреАрд░ рдФрд░ рдореЗрд╣рдирддреАред рд▓рдХреНрд╖реНрдп рд╕рд╛рдзрдиреЗ рд╡рд╛рд▓реЗред",
  kumbh: "ЁЯФо рд╡рд┐рдЪрд┐рддреНрд░ рд▓реЗрдХрд┐рди рд╣реЛрд╢рд┐рдпрд╛рд░ред рдирдП рд╡рд┐рдЪрд╛рд░реЛрдВ рд╕реЗ рднрд░реЗ рд░рд╣рддреЗ рд╣реИрдВред",
  meen: "ЁЯРЯ рд╕рдкрдиреЛрдВ рдХреА рджреБрдирд┐рдпрд╛ рдореЗрдВ рдЬреАрдиреЗ рд╡рд╛рд▓реЗред рдмреЗрд╣рдж рд╕рдВрд╡реЗрджрдирд╢реАрд▓ред"
};

const traits: Record<string, string[]> = {
  mesh: ["ЁЯЪА Risk taker in life, but slow replier.", "ЁЯФе Fights for fun (and wins)."],
  vrishabh: ["ЁЯНл Food = Emotion.", "ЁЯТ╕ Bargains even on Flipkart Sale."],
  mithun: ["ЁЯОд Talks nonstop.", "ЁЯза Knows everything, even your crushтАЩs birthday."],
  karka: ["ЁЯШн Cries watching puppy ads.", "ЁЯлВ Emotional hoarder."],
  singh: ["ЁЯжБ Majestic AF.", "ЁЯСС Attitude is their birthright."],
  kanya: ["ЁЯУЛ Planner of every moment.", "ЁЯз╜ Cleans to relieve stress."],
  tula: ["ЁЯТЕ Sab kuch stylish hona chahiye.", "тЪЦя╕П Decision? 6 hours lagte hain."],
  vrishchik: ["ЁЯХ╡я╕П Spy-level intuition.", "ЁЯФе Dangerous when silent."],
  dhanu: ["ЁЯПХя╕П Travel dreamer.", "ЁЯШВ Cracks jokes even during exams."],
  makar: ["ЁЯза CEO in making.", "ЁЯУК Always focused."],
  kumbh: ["ЁЯдЦ Tech and tandoori thinker.", "ЁЯЫ╕ Time traveler in dreams."],
  meen: ["ЁЯОз Escapes in music.", "ЁЯМзя╕П Cries romantically in rain."]
};

const rashiButtons = document.querySelectorAll<HTMLButtonElement>(".rashi-grid button");
const resultBox = document.getElementById("resultBox")!;
const moreBtn = document.getElementById("moreBtn")!;
const deepDiveBox = document.getElementById("deepDiveBox")!;
const langToggle = document.getElementById("langToggle")!;
const shareBtn = document.getElementById("shareBtn")!;

let selectedRashi: string | null = localStorage.getItem("rashi");
let lastTrait: string | null = localStorage.getItem("trait");

function updateDisplay() {
  if (selectedRashi) {
    const desc = language === 'hi' ? hiDescriptions[selectedRashi] : enDescriptions[selectedRashi];
    resultBox.textContent = desc;
    if (lastTrait) {
      deepDiveBox.textContent = lastTrait;
    }
    moreBtn.style.display = "inline-block";
    shareBtn.style.display = "inline-block";
  }
}

rashiButtons.forEach(button => {
  button.addEventListener("click", () => {
    selectedRashi = button.dataset.rashi!;
    lastTrait = "";
    localStorage.setItem("rashi", selectedRashi);
    localStorage.removeItem("trait");
    updateDisplay();
  });
});

moreBtn.addEventListener("click", () => {
  if (selectedRashi) {
    const traitList = traits[selectedRashi];
    const randomTrait = traitList[Math.floor(Math.random() * traitList.length)];
    deepDiveBox.textContent = randomTrait;
    localStorage.setItem("trait", randomTrait);
    lastTrait = randomTrait;
    shareBtn.style.display = "inline-block";
  }
});

langToggle.addEventListener("click", () => {
  language = language === 'en' ? 'hi' : 'en';
  langToggle.textContent = language === 'en' ? 'Switch to Hindi ЁЯЗоЁЯЗ│' : 'Switch to English ЁЯЗмЁЯЗз';
  updateDisplay();
});

shareBtn.addEventListener("click", () => {
  if (selectedRashi) {
    const desc = language === 'hi' ? hiDescriptions[selectedRashi] : enDescriptions[selectedRashi];
    const message = encodeURIComponent(`My Rashi is ${selectedRashi.toUpperCase()}!\n\nтЬи Description:\n${desc}\n\nЁЯФН Personality:\n${lastTrait ?? ""}\nCheck yours now!`);
    window.open(`https://wa.me/?text=${message}`, '_blank');
  }
});

updateDisplay(); // Auto load if saved in localStorage
